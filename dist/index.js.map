{"version":3,"sources":["webpack://[name]/webpack/universalModuleDefinition","webpack://[name]/webpack/bootstrap","webpack://[name]/external \"../settings\"","webpack://[name]/./model/jobLogs.js","webpack://[name]/./model/mongo.js","webpack://[name]/./src/index.js","webpack://[name]/./src/job.js","webpack://[name]/./src/util.js","webpack://[name]/external \"agenda\"","webpack://[name]/external \"koa\"","webpack://[name]/external \"koa-bodyparser\"","webpack://[name]/external \"koa-logger\"","webpack://[name]/external \"koa-router\"","webpack://[name]/external \"mongoose\"","webpack://[name]/external \"pythonic\"","webpack://[name]/external \"querystring\"","webpack://[name]/external \"request-promise\"","webpack://[name]/external \"util\""],"names":["Schema","mongoose","jobLogsSchema","type","String","Date","default","module","exports","model","connect","settings","agendaMongoUrl","err","db","console","log","app","router","agenda","Agenda","address","collection","jobsReady","on","bind","then","jobs","_mdb","definitions","toArray","jobsCursor","find","jobsArray","Promise","all","map","job","start","getJobMiddleware","jobAssertion","jobOperation","errorCode","ctx","next","request","body","name","params","jobName","catch","throw","get","post","jobAssertions","notExists","jobOperations","define","del","alreadyExists","delete","put","once","every","now","doNotAssert","cancel","graceful","stop","process","exit","getCheckJobFormatFunction","jobProperty","defaultJob","Error","Object","assign","doNotCheck","getAssertFunction","assertOnCount","errorOnName","count","defineJob","url","method","callback","done","attrs","data","uri","key","value","replace","query","querystring","stringify","race","resolve","reject","setTimeout","timeout","headers","json","jobLogs","status","result","JSON","message","jobInfo","save","saveErr","fail","error","response","insert","update","$set","deleteJob","numRemoved","obj","remove","n","cancelJob","getDefaultJobForSchedule","scheduleTypes","getParams","schedule","time","parseInt","interval","isNaN","getScheduleJobFunction","scheduleType","getJobOperation","checkFunction","jobFunction","check","fn","promiseJobOperation","bootstrapKoaApp","Koa","Router","use","dir","onerror","routes","isValidDate","date","prototype","toString","call","getTime"],"mappings":"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","file":"./dist/index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"./dist/index\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"./dist/index\"] = factory();\n\telse\n\t\troot[\"./dist/index\"] = factory();\n})(global, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading wasm modules\n \tvar installedWasmModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// object with all compiled WebAssembly.Modules\n \t__webpack_require__.w = {};\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","module.exports = require(\"../settings\");","import mongoose from 'mongoose';\nimport './mongo'\nconst Schema=mongoose.Schema;\n\nlet jobLogsSchema=new Schema({\n  \"jobName\":{type:String},\n  \"status\":String,\n  \"runAt\":{type:Date,default:new Date()},\n  \"result\":String,\n  \"jobInfo\":String\n\n})\n\nmodule.exports=mongoose.model('jobLogs',jobLogsSchema);\n","import mongoose from 'mongoose';\nimport settings from '../settings';\n\nmongoose.connect(settings.agendaMongoUrl,(err,db)=>{\n  if(!err){\n    console.log('数据库连接成功')\n  }else{\n    console.log('数据库连接失败')\n  }\n})\n","import {promisify} from 'util';\nimport Agenda from 'agenda';\nimport settings from '../settings';\nimport {bootstrapKoaApp} from './util';\nimport {defineJob, jobOperations, jobAssertions, promiseJobOperation} from './job';\n\nconst {app, router} = bootstrapKoaApp();\n\nconst agenda = new Agenda({\n  db: {\n    address: settings.agendaMongoUrl,\n    collection: settings.collection\n  }\n});\n\nconst jobsReady = promisify(agenda.on).bind(agenda)('ready')\n  .then(async () => {\n    const jobs = agenda._mdb.collection(settings.definitions);\n    jobs.toArray = () => {\n      const jobsCursor = jobs.find();\n      return promisify(jobsCursor.toArray).bind(jobsCursor)();\n    };\n    await jobs.toArray()\n      .then(jobsArray => Promise.all(jobsArray.map(job => defineJob(job, jobs, agenda))));\n\n    agenda.start();\n    return jobs;\n  });\n\nconst getJobMiddleware = (jobAssertion, jobOperation, errorCode = 400) => async (ctx, next) => {\n  const job = ctx.request.body || {};\n  job.name = ctx.params.jobName || job.name;\n  const jobs = await jobsReady;\n  ctx.body = await promiseJobOperation(job, jobs, agenda, jobAssertion, jobOperation)\n    .catch(err => ctx.throw(errorCode, err));\n  await next();\n};\n\nrouter.get('/api/job', async (ctx, next) => {\n  ctx.body = await jobsReady.then(jobs => jobs.toArray());\n  await next();\n});\n\nrouter.post('/api/job', getJobMiddleware(jobAssertions.notExists, jobOperations.define));\n\nrouter.del('/api/job/:jobName', getJobMiddleware(jobAssertions.alreadyExists, jobOperations.delete));\n\nrouter.put('/api/job/:jobName', getJobMiddleware(jobAssertions.alreadyExists, jobOperations.define));\n\nrouter.post('/api/job/once', getJobMiddleware(jobAssertions.alreadyExists, jobOperations.once));\n\nrouter.post('/api/job/every', getJobMiddleware(jobAssertions.alreadyExists, jobOperations.every));\n\nrouter.post('/api/job/now', getJobMiddleware(jobAssertions.alreadyExists, jobOperations.now));\n\nrouter.post('/api/job/cancel', getJobMiddleware(jobAssertions.doNotAssert, jobOperations.cancel));\n\nconst graceful = () => {\n  console.log('\\nShutting down gracefully...');\n  agenda.stop(() => {\n    // eslint-disable-next-line unicorn/no-process-exit\n    process.exit(0);\n  });\n};\n\nprocess.on('SIGTERM', graceful);\nprocess.on('SIGINT', graceful);\n\nexport {app, router, jobsReady};\nexport default app;\n","import querystring from 'querystring';\nimport {promisify} from 'util';\nimport {keyValues} from 'pythonic';\nimport rp from 'request-promise';\nimport settings from '../settings';\nimport {isValidDate} from './util';\nimport jobLogs from '../model/jobLogs';\n\nconst getCheckJobFormatFunction = (jobProperty, defaultJob = {}) => job => {\n  if (!job.name || (jobProperty && !job[jobProperty])) {\n    throw new Error(`expected request body to match {name${jobProperty ? `, ${jobProperty}` : ''}}`);\n  }\n  return Object.assign(defaultJob, job);\n};\n\nconst doNotCheck = job => job;\n\nconst getAssertFunction = (assertOnCount, errorOnName) => async (job, jobs) => jobs.count({name: job.name})\n  .then(count => {\n    if (!assertOnCount(count)) {\n      throw new Error(errorOnName(job.name));\n    }\n  });\n\nconst jobAssertions = {\n  alreadyExists: getAssertFunction(count => count > 0, name => `Did not find a job named \"${name}\"`),\n  notExists: getAssertFunction(count => count <= 0, name => `A job named \"${name}\" already exist`),\n  doNotAssert: () => true\n};\n\nconst defineJob = async ({name, url, method, callback} = {}, jobs, agenda) => {\n  agenda.define(name, (job, done) => {\n\n    const {attrs: {data}} = job;\n\n    let uri = url;\n    for (const [key, value] of keyValues(data.params)) {\n      uri = uri.replace(`:${key}`, value);\n    }\n    const query = querystring.stringify(data.query);\n    if (query !== '') {\n      uri += `?${query}`;\n    }\n    Promise.race([\n      new Promise((resolve, reject) => setTimeout(() => reject(new Error('TimeOutError')), settings.timeout)),\n      rp({\n        method: method || 'POST',\n        uri,\n        body: data.body,\n        headers: data.headers || {},\n        json: true\n      })\n    ])\n      .catch(err => {\n\n        new jobLogs({\n          jobName:job.attrs.name,\n          status:\"failed\",\n          result:JSON.stringify(err.message),\n          jobInfo:JSON.stringify(job.attrs)\n        }).save(function (saveErr,log) {\n          job.fail(saveErr);\n        })\n        job.fail(err.message);\n        return {error: err.message};\n      })\n      .then(result => {\n        new jobLogs({\n          jobName:job.attrs.name,\n          status:\"success\",\n          result:JSON.stringify(result),\n          jobInfo:JSON.stringify(job.attrs)\n        }).save(function (saveErr,log) {\n          job.fail(saveErr);\n        })\n        if (callback) {\n          return rp({\n            method: callback.method || 'POST',\n            uri: callback.url,\n            headers: callback.headers || {},\n            body: {data: data.body, response: result},\n            json: true\n          });\n        }\n      })\n      .catch(err => {\n        job.fail(`failure in callback: ${err.message}`)\n        new jobLogs({\n          jobName:job.attrs.name,\n          status:\"failed\",\n          result:`failure in callback: ${err.message}`,\n          jobInfo:JSON.stringify(job.attrs)\n        }).save(function (saveErr,log) {\n          job.fail(saveErr);\n        })\n      })\n      .then(() => done());\n  });\n\n  await jobs.count({name})\n    .then(count => count < 1 ? jobs.insert({name, url, method, callback}) : jobs.update({name}, {$set: {url, method, callback}}));\n\n  return 'job defined';\n};\n\nconst deleteJob = async (job, jobs, agenda) => {\n  const cancel = promisify(agenda.cancel).bind(agenda);\n  const numRemoved = await cancel(job);\n  const obj = await jobs.remove(job);\n  return `removed ${numRemoved} job definitions and ${obj.result.n} job instances.`;\n};\n\nconst cancelJob = async (job, jobs, agenda) => {\n  const numRemoved = await promisify(agenda.cancel).bind(agenda)(job);\n  return `${numRemoved} jobs canceled`;\n};\n\nconst getDefaultJobForSchedule = () => ({\n  data: {\n    body: {},\n    params: {},\n    query: {}\n  }\n});\n\nconst scheduleTypes = {\n  now: {\n    method: agenda => promisify(agenda.now).bind(agenda),\n    message: 'for now',\n    getParams: job => [job.name, job.data]\n  },\n  once: {\n    method: agenda => promisify(agenda.schedule).bind(agenda),\n    message: 'for once',\n    getParams: job => {\n      // Check if interval is timestamp\n      let time = parseInt(job.interval, 10);\n      time = isNaN(time) ? job.interval : time;\n      // Check if interval is date\n      time = new Date(time);\n      time = isValidDate(time) ? time : job.interval;\n      return [time, job.name, job.data];\n    }\n  },\n  every: {\n    method: agenda => promisify(agenda.every).bind(agenda),\n    message: 'for repetition',\n    getParams: job => [job.interval, job.name, job.data]\n  }\n};\n\nconst getScheduleJobFunction = scheduleType => async (job, jobs, agenda) => {\n  await scheduleType.method(agenda)(...scheduleType.getParams(job));\n  return `job scheduled ${scheduleType.message}`;\n};\n\nconst getJobOperation = (checkFunction, jobFunction) => ({check: checkFunction, fn: jobFunction});\n\nconst jobOperations = {\n  define: getJobOperation(getCheckJobFormatFunction('url'), defineJob),\n  delete: getJobOperation(getCheckJobFormatFunction(), deleteJob),\n  cancel: getJobOperation(doNotCheck, cancelJob),\n  now: getJobOperation(\n    getCheckJobFormatFunction(false, getDefaultJobForSchedule()),\n    getScheduleJobFunction(scheduleTypes.now)\n  ),\n  once: getJobOperation(\n    getCheckJobFormatFunction('interval', getDefaultJobForSchedule()),\n    getScheduleJobFunction(scheduleTypes.once)\n  ),\n  every: getJobOperation(\n    getCheckJobFormatFunction('interval', getDefaultJobForSchedule()),\n    getScheduleJobFunction(scheduleTypes.every)\n  )\n};\n\nconst promiseJobOperation = async (job, jobs, agenda, jobAssertion, jobOperation) => {\n  job = await jobOperation.check(job);\n  await jobAssertion(job, jobs);\n  return jobOperation.fn(job, jobs, agenda);\n};\n\nexport {\n  promiseJobOperation,\n  jobOperations,\n  jobAssertions,\n  defineJob\n};\n","import Koa from 'koa';\nimport logger from 'koa-logger';\nimport Router from 'koa-router';\nimport bodyParser from 'koa-bodyparser';\n\nconst bootstrapKoaApp = () => {\n  const app = new Koa();\n  const router = new Router();\n  app.use(logger());\n  app.use(async (ctx, next) => next()\n    .catch(err => {\n      console.dir(err);\n      ctx.body = String(err);\n      ctx.status = err.status || 500;\n    })\n  );\n  app.use(bodyParser({\n    onerror(error, ctx) {\n      ctx.throw(400, `cannot parse request body, ${JSON.stringify(error)}`);\n    }\n  }));\n  app.use(router.routes());\n  return {app, router};\n};\n\nconst isValidDate = date => Object.prototype.toString.call(date) === '[object Date]' && !isNaN(date.getTime());\n\nexport {bootstrapKoaApp, isValidDate};\n","module.exports = require(\"agenda\");","module.exports = require(\"koa\");","module.exports = require(\"koa-bodyparser\");","module.exports = require(\"koa-logger\");","module.exports = require(\"koa-router\");","module.exports = require(\"mongoose\");","module.exports = require(\"pythonic\");","module.exports = require(\"querystring\");","module.exports = require(\"request-promise\");","module.exports = require(\"util\");"],"sourceRoot":""}